//========================================================
//
//    Copyright (c) 2008,欢乐连线工作室
//    All rights reserved.
//
//    文件名称：ObjMgr
//    摘    要：对象管理基类模版
//    
//    当前版本：1.00
//    作    者：李锋军
//    完成日期：2008-3-18
//    修改说明：
//
//========================================================

#ifndef _FILE_OBJMGR_H 
#define _FILE_OBJMGR_H 


//****************************************************
//名字：ObjMgr
//描述：对象管理基类模版,相当于一个容器
//日期：2008-3-18
//****************************************************
template<typename _T, typename _CONT = std::vector<_T>>
class ObjMgr
{
/*-------------------------------------------*/
/*               成员方法区               */
/*-------------------------------------------*/
public:
	ObjMgr(){};
	virtual ~ObjMgr(){};
	/*--------------------------------------------------------
		功能：迭代器
		参数：无
		返回：_CONT::iterator：容器起始迭代器
		作者：李锋军
		备注：返回容器起始迭代器
		日期：2008-3-18
	----------------------------------------------------------*/
	typename _CONT::iterator Begin() { sbase::CSingleLock xLock(&m_xLock); return Container.begin(); }
	/*--------------------------------------------------------
		功能：迭代器
		参数：无
		返回：_CONT::iterator：容器结束迭代器
		作者：李锋军
		备注：返回容器结束迭代器
		日期：2008-3-18
	----------------------------------------------------------*/
	typename _CONT::iterator End() { sbase::CSingleLock xLock(&m_xLock); return Container.end(); }
	/*--------------------------------------------------------
		功能：向容器压入一个元素
		参数：obj：容器元素
		返回：void
		作者：李锋军
		备注：向容器压入一个_T类型的元素
		日期：2008-3-18
	----------------------------------------------------------*/
	void Push(_T obj ){ sbase::CSingleLock xLock(&m_xLock); Container.push_back(obj); }
	/*--------------------------------------------------------
		功能：判断容器是否为空
		参数：无
		返回：bool：容器为空返回true，否则返回false
		作者：李锋军
		备注：判断以_T为元素类型的容器是否为空
		日期：2008-3-18
	----------------------------------------------------------*/
	bool empty() const {  sbase::CSingleLock xLock(&m_xLock); return Container.empty(); }
	/*--------------------------------------------------------
		功能：从容器中移除迭代器指向的元素
		参数：itor：特定的迭代器
		返回：无
		作者：李锋军
		备注：移除特定的迭代器所指元素
		日期：2008-3-18
	----------------------------------------------------------*/
	typename _CONT::iterator Remove( typename _CONT::iterator itor ){ sbase::CSingleLock xLock(&m_xLock); return Container.erase(itor);}
	/*--------------------------------------------------------
		功能：返回到容器元素数量
		参数：无
		返回：size_t : 容器大小
		作者：李锋军
		备注：返回容器大小
		日期：2008-3-18
	----------------------------------------------------------*/
	size_t GetSize(){ sbase::CSingleLock xLock(&m_xLock); return Container.size();};

	/*--------------------------------------------------------
	功能：清空容器
	参数：无
	返回：void
	作者：李锋军
	备注：清空容器中的所有内容
	日期：2008-3-18
	----------------------------------------------------------*/
	void Clear(){ sbase::CSingleLock xLock(&m_xLock); Container.clear();};

protected:

private:

/*-------------------------------------------*/
/*               成员变量区               */
/*-------------------------------------------*/
public:
protected:
	/*----------------------------------------------------------
		功能：模版容器
		作者：李锋军
		日期：2008-3-18
	----------------------------------------------------------*/
    _CONT  Container;
	sbase::CCriticalSection	m_xLock;
private:

	
};

#endif
